// Generated by CoffeeScript 1.4.0
(function() {

  App.View.Invoices = App.View.extend({
    tagName: 'div',
    id: 'my-invoices',
    className: 'admin-module',
    templateName: 'invoices',
    breadcrumbs: null,
    invoices: null,
    initialize: function() {
      var _this = this;
      this.invoices = new App.Model.InvoiceCollection;
      this.invoices.fetch();
      return this.invoices.fetched.done(function(invs) {
        var invoice, invoices, tplView;
        invoices = (function() {
          var _i, _len, _ref, _results;
          _ref = invs.models;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            invoice = _ref[_i];
            tplView = new App.View.InvoiceRow({
              model: invoice
            });
            _results.push(tplView.render());
          }
          return _results;
        })();
        return _this.$('#invoices-table').find('tbody').html(invoices);
      });
    },
    render: function() {
      $(this.el).html(this.template());
      App.setActive('invoices');
      this.breadcrumbs = [
        {
          label: App.user.get('name'),
          link: '#dashboard'
        }, {
          label: 'My Invoices'
        }
      ];
      App.setBreadcrumbs(this.breadcrumbs);
      this.invoices.requestNextPage({
        update: true,
        remove: false
      });
      return this.el;
    }
  });

  App.View.InvoiceRow = App.View.extend({
    tagName: 'tr',
    templateName: 'invoice-row',
    events: {
      'click .view': 'viewInvoice',
      'click .download': 'downloadInvoice'
    },
    render: function() {
      $(this.el).html(this.template({
        model: this.model
      }));
      return this.el;
    },
    pdfUrl: function() {
      var hostname, protocol, url, _ref;
      url = this.model.url() + '.pdf?access_token=' + App.client.token + '&_pdfrenderer_filename=invoice_' + this.model.get('id');
      _ref = document.location, protocol = _ref.protocol, hostname = _ref.hostname;
      return "" + protocol + "//" + hostname + url;
    },
    viewInvoice: function(e) {
      e.preventDefault();
      return window.open("" + (this.model.url()) + ".html?access_token=" + App.client.token);
    },
    downloadInvoice: function(e) {
      e.preventDefault();
      return document.location.href = this.pdfUrl();
    }
  });

}).call(this);
