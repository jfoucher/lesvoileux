// Generated by CoffeeScript 1.4.0
(function() {

  App.View.SignupDropdown = App.View.extend({
    className: 'inner',
    templateName: 'signup-dropdown',
    events: {
      'click .twitter': "twitterLogin",
      'click .facebook': 'facebookLogin',
      'submit .login': 'signup'
    },
    render: function() {
      $(this.el).html(this.template());
      $(this.el).find('form.login').parsley();
      return this.el;
    },
    signup: function(e) {
      var email, name, options, password,
        _this = this;
      e.preventDefault();
      this.clearErrors();
      email = $('#emailSignup').val();
      password = $('#passwordSignup').val();
      name = $('#nameSignup').val();
      options = {
        language_code: App.language
      };
      $('#signupLogin').addClass('loading');
      return App.client.createUser(name, email, password, options).done(function(data) {
        return setTimeout((function() {
          return App.client.login(email, password, 1).done(function(data) {
            App.setPref('token', data.access_token);
            App.client.token = data.access_token;
            return App.init().done(function() {
              var signedupView;
              if (App.appData.beta) {
                window.location = '/backend#dashboard';
              }
              signedupView = new App.View.SignedUp({
                model: App.user
              });
              $('#signup').html(signedupView.render());
              return $(document).trigger('login.success');
            });
          });
        }), 100);
      }).fail(function(xhr) {
        var result;
        result = JSON.parse(xhr.responseText);
        return _this.showErrors(result != null ? result.form : void 0, $(_this.el).find('form.login'));
      }).always(function() {
        return $('#signupLogin').removeClass('loading');
      });
    },
    clearErrors: function() {
      $('ul.error').remove();
      return $('input.parsley-error').removeClass('parsley-error');
    },
    twitterLogin: function(e) {
      e.preventDefault();
      return window.open("/openid/login?client_id=" + (encodeURIComponent(App.client.client_id)) + "&stamplia_beta=1&openid_identifier=" + (encodeURIComponent('https://www.twitter.com')), "openidLogin" + ((new Date).getTime()), "menubar=no,toolbar=no,location=no,status=no,width=800,height=600");
    },
    googleLogin: function(e) {
      e.preventDefault();
      return window.open("/openid/login?client_id=" + (encodeURIComponent(App.client.client_id)) + "&stamplia_beta=1&openid_identifier=" + (encodeURIComponent('https://www.google.com/accounts/o8/id')), "openidLogin" + ((new Date).getTime()), "menubar=no,toolbar=no,location=no,status=no,width=800,height=600");
    },
    facebookLogin: function(e) {
      e.preventDefault();
      return window.open("/openid/login?client_id=" + (encodeURIComponent(App.client.client_id)) + "&stamplia_beta=1&openid_identifier=" + (encodeURIComponent('https://facebook.com')), "openidLogin" + ((new Date).getTime()), "menubar=no,toolbar=no,location=no,status=no,width=800,height=600");
    },
    redirected: function(result) {
      var language_code, provider, _ref,
        _this = this;
      language_code = result.language_code || this.language || App.language || 'en';
      provider = ((_ref = result.external_identity) != null ? _ref.provider : void 0) || result.provider;
      if (result.success) {
        if (result.token) {
          App.client.token = result.token.access_token;
          App.setPref('token', result.token.access_token);
          return App.init().done(function(r) {
            $(document).trigger('login.success');
            if (window._gaq && provider) {
              return _gaq.push(['_trackPageview', "/user-created/" + language_code + "/" + (encodeURIComponent(provider))]);
            }
          });
        } else {
          if (window._gaq && provider) {
            _gaq.push(['_trackPageview', "/user-confirm/" + language_code + "/" + (encodeURIComponent(provider))]);
          }
          return console.log('show email address confirm field');
        }
      } else {
        this.clearErrors(this.el);
        if (result.error) {
          if (window._gaq) {
            _gaq.push(['_trackPageview', "/user-error/" + (encodeURIComponent(result.error))]);
          }
          return this.showErrors(result.error, $('#signup-social'));
        }
      }
    }
  });

}).call(this);
