// Generated by CoffeeScript 1.4.0
(function() {
  var GlobalApp, superClass,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  superClass = function() {};

  _.extend(superClass.prototype, Backbone.Events);

  GlobalApp = (function(_super) {

    __extends(GlobalApp, _super);

    function GlobalApp() {
      return GlobalApp.__super__.constructor.apply(this, arguments);
    }

    GlobalApp.prototype.View = {};

    GlobalApp.prototype.Model = {};

    GlobalApp.prototype.urlRoot = null;

    GlobalApp.prototype.root = '';

    GlobalApp.prototype.user = null;

    GlobalApp.prototype.router = null;

    GlobalApp.prototype.tmpls = null;

    GlobalApp.prototype.language = null;

    GlobalApp.prototype.templates = null;

    GlobalApp.prototype.perPage = 9;

    GlobalApp.prototype.appData = {};

    GlobalApp.prototype.started = null;

    GlobalApp.prototype.cart = null;

    GlobalApp.prototype.cartView = null;

    GlobalApp.prototype.cartFetched = null;

    GlobalApp.prototype.messages = null;

    GlobalApp.prototype.handleCart = function() {
      var fetch, token,
        _this = this;
      if (!this.cart) {
        this.cart = new App.Model.Cart();
      }
      if (this.user.get('cart')) {
        this.cart.set('id', this.user.get('cart').id);
      }
      if (App.getPref('temp_user')) {
        this.cart.set('temp_user', App.getPref('temp_user'));
        this.unsetPref('temp_user');
      } else {
        token = this.generateToken();
        this.setPref('temp_user', token);
        this.cart.set('temp_user', token);
      }
      fetch = this.cart.fetch();
      fetch.fail(function() {
        return _this.cart.save().done(function() {
          return _this.cart.fetch().done(function() {
            return _this.showCart();
          });
        });
      });
      return fetch.done(function() {
        _this.cart.set('user', App.user.id);
        _this.cart.save();
        return _this.showCart();
      });
    };

    GlobalApp.prototype.init = function() {
      var gotApp, gotUser,
        _this = this;
      gotApp = this.client.get('app');
      gotApp.done(function(data) {
        return _this.appData = data.app;
      });
      gotUser = this.client.getUser();
      gotUser.done(function(user) {
        var loggedIn;
        _this.user = new App.Model.User(user.user);
        _errs.meta['user'] = _this.user.toJSON();
        _this.client.language = _this.user.get('language_code');
        loggedIn = new App.View.LoggedInDropdown();
        $('li.languages').remove();
        $('li.login').html(loggedIn.render());
        $('li.signup').remove();
        _this.showMessages();
        return _this.handleCart();
      });
      return $.when(gotUser, gotApp);
    };

    GlobalApp.prototype.start = function() {
      var _this = this;
      if (this.started) {
        return this.started;
      }
      this.cartFetched = $.Deferred();
      this.started = this.init();
      this.started.always(function() {
        if (!_this.cart) {
          return _this.cart = new App.Model.Cart();
        }
      });
      this.started.fail(function() {
        var fetch, login, signup, token;
        login = new App.View.LoginDropdown();
        $('#login-dropdown').html(login.render());
        signup = new App.View.SignupDropdown();
        $('#signup-dropdown').html(signup.render());
        if (!(token = _this.getPref('temp_user'))) {
          token = _this.generateToken();
        }
        _this.setPref('temp_user', token);
        $('#nav-main').find('li.messages').remove();
        _this.showCart();
        _this.cart.set('temp_user', token);
        fetch = _this.cart.fetch();
        fetch.fail(function() {
          return _this.cart.save();
        });
        return fetch.always(function() {
          return _this.cartFetched.resolve();
        });
      });
      this.started.done(function() {
        return _this.showMessages();
      });
      return this.started;
    };

    GlobalApp.prototype.getPref = function(key, def) {
      if (def == null) {
        def = null;
      }
      return $.jStorage.get('stamplia.' + key, def);
    };

    GlobalApp.prototype.setPref = function(key, value) {
      return $.jStorage.set('stamplia.' + key, value);
    };

    GlobalApp.prototype.unsetPref = function(key) {
      return $.jStorage.deleteKey('stamplia.' + key);
    };

    GlobalApp.prototype.showMessages = function() {
      var msgDropdownView, nav,
        _this = this;
      this.messages = new App.Model.MessageCollection();
      this.messages.received = true;
      this.messages.fetch();
      this.messages.fetched.done(function() {});
      nav = $('#nav-main');
      msgDropdownView = new App.View.MessagesDropdown();
      nav.find('li.messages').remove();
      return nav.find('li.login').first().before(msgDropdownView.render());
    };

    GlobalApp.prototype.showCart = function() {
      var nav;
      this.cartFetched.resolve();
      if (!this.appData.beta) {
        nav = $('#nav-main');
        this.cartView = new App.View.Cart();
        nav.find('li.shopping-cart').remove();
        return nav.find('li.login').first().before(this.cartView.render());
      }
    };

    GlobalApp.prototype.generateToken = function() {
      return Math.random().toString(36).substr(2) + Math.random().toString(36).substr(2);
    };

    GlobalApp.prototype.gaEvent = function(category, action, opt_label, opt_value, opt_noninteraction) {
      _gaq.push(['_trackEvent'].concat($.makeArray(arguments)));
      return void 0;
    };

    return GlobalApp;

  })(superClass);

  this.GlobalApp = GlobalApp;

}).call(this);
