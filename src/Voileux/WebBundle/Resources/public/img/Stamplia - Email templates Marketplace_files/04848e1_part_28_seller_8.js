// Generated by CoffeeScript 1.4.0
(function() {

  App.View.Seller = App.View.extend({
    tagName: 'div',
    id: 'my-invoices',
    className: 'admin-module',
    templateName: 'seller',
    breadcrumbs: null,
    payments: null,
    events: {
      'click #request-payment': 'requestPayment'
    },
    initialize: function() {
      this.payments = new App.Model.UserPaymentCollection;
      return this.payments.fetch();
    },
    render: function() {
      var _this = this;
      $(this.el).html(this.template());
      App.setActive('seller');
      this.breadcrumbs = [
        {
          label: App.user.get('name'),
          link: '#dashboard'
        }, {
          label: 'Seller'
        }
      ];
      App.setBreadcrumbs(this.breadcrumbs);
      this.payments.fetched.done(function() {
        var $td, payment, paymentViews, text, tplView;
        if (_this.payments.models.length) {
          paymentViews = (function() {
            var _i, _len, _ref, _results;
            _ref = this.payments.models;
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              payment = _ref[_i];
              tplView = new App.View.PaymentRow({
                model: payment
              });
              _results.push(tplView.render());
            }
            return _results;
          }).call(_this);
          return _this.$('#sales-table').find('tbody').html(paymentViews);
        } else {
          $td = _this.$('#sales-table').find('tbody td.default');
          text = $td.data('no-sales-text');
          return $td.html(text);
        }
      });
      this.handlePaymentRequestButton();
      return this.el;
    },
    handlePaymentRequestButton: function() {
      var btn;
      console.log('revenue cache', App.user.get('revenue_cache'));
      btn = this.$('#request-payment');
      if (App.user.get('revenue_cache') > App.revenueTreshold && !App.user.get('payment_requested')) {
        btn.removeClass('disabled');
      } else {
        btn.addClass('disabled');
      }
      if (App.user.get('payment_requested')) {
        btn.text(btn.data('payment-requested-text'));
      }
      if (App.user.get('payment_authorized')) {
        return btn.text(btn.data('payment-pending-text'));
      }
    },
    requestPayment: function() {
      var btn,
        _this = this;
      console.log('payment requested');
      btn = this.$('#request-payment');
      btn.addClass('loading');
      App.user.set('payment_requested', true);
      return App.user.save().done(function() {
        btn.removeClass('loading');
        btn.addClass('disabled');
        return btn.text(btn.data('payment-requested-text'));
      });
    }
  });

  App.View.PaymentRow = App.View.extend({
    tagName: 'tr',
    templateName: 'payment-row',
    render: function() {
      $(this.el).html(this.template({
        model: this.model
      }));
      return this.el;
    }
  });

}).call(this);
