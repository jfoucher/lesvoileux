// Generated by CoffeeScript 1.4.0
(function() {

  App.Model.Category = App.Model.extend({
    namespace: "category",
    defaults: {
      id: null,
      name: ''
    },
    url: function() {
      var url;
      url = "" + App.urlRoot + "/categories";
      if (this.get('id')) {
        url = "" + App.urlRoot + "/categories/" + (this.get('id'));
      }
      if (this.get('name')) {
        url = "" + App.urlRoot + "/categories/" + (this.get('name'));
      }
      return url;
    }
  });

  App.Model.CategoryCollection = Backbone.Collection.extend({
    model: App.Model.Category,
    namespace: "categories",
    fetched: null,
    category: null,
    parse: function(resp) {
      this.totalPages = resp.count;
      if (!this.namespace) {
        throw Error("a namespace property must be defined");
      }
      return resp[this.namespace];
    },
    initialize: function() {
      return this.fetched = $.Deferred();
    },
    fetch: function() {
      var _this = this;
      return Backbone.Collection.prototype.fetch.apply(this, arguments).done(function() {
        return _this.fetched.resolve(_this);
      });
    },
    url: function() {
      return "" + App.urlRoot + "/categories";
    }
  });

}).call(this);
