// Generated by CoffeeScript 1.4.0
(function() {

  App.View.Messages = App.View.extend({
    tagName: 'div',
    id: 'my-messages',
    className: 'admin-module',
    templateName: 'messages',
    breadcrumbs: null,
    messagesReceived: null,
    messagesSent: null,
    creators: null,
    loadInbox: true,
    purchases: null,
    events: {
      'click .msg-inbox': 'showInbox',
      'click  .activate-tab': 'showTab',
      'submit .send-message-form': 'sendMessage',
      'click #sendMessage': 'sendMessage'
    },
    initialize: function(options) {
      var _this = this;
      if (options == null) {
        options = null;
      }
      if (options) {
        this.loadInbox = options.loadInbox;
      }
      $(document).on('replyTo', function(e, data) {
        _this.showNewMessage();
        _this.$('.choose-user').hide();
        _this.$('#forwardingUser').remove();
        _this.$('.recipient').show().append('<input type="hidden" value="' + data.get('author').id + '" id="forwardingUser" />');
        return _this.$('#recipient-name').html(data.get('author').name + ' <small>(' + data.get('author').email + ')</small>');
      });
      this.purchases = new App.Model.PurchaseCollection();
      return this.purchases.fetch();
    },
    showInbox: function() {
      return App.router.navigate('messages', {
        trigger: true
      });
    },
    render: function() {
      var _this = this;
      $(this.el).html(this.template());
      App.setActive('messages');
      this.breadcrumbs = [
        {
          label: App.user.get('name'),
          link: '#dashboard'
        }, {
          label: 'My Messages'
        }
      ];
      this.findForwardingUsers().done(function() {
        return _this.$("select, input[type=checkbox], .controls input[type=radio]").uniform({
          selectAutoWidth: false
        });
      });
      App.setBreadcrumbs(this.breadcrumbs);
      App.start().done(function() {
        _this.$('.activate-tab').removeClass('active');
        _this.$('.tab-pane').removeClass('active').hide();
        _this.$('#msg-inbox').addClass('active').show();
        if (_this.loadInbox) {
          return _this.showMessagesReceived();
        }
      });
      return this.el;
    },
    showTab: function(e) {
      var href;
      if (e != null) {
        e.preventDefault();
      }
      href = $(e.currentTarget).attr('href');
      this.activateTab(href);
      if (href === '#msg-new-message') {
        return this.showNewMessage();
      } else if (href === '#msg-inbox') {
        return this.showMessagesReceived();
      } else if (href === '#msg-sent-message') {
        return this.showMessagesSent();
      }
    },
    activateTab: function(href) {
      this.$('.activate-tab').removeClass('active');
      this.$('.tab-pane').removeClass('active').hide();
      return this.$(href).addClass('active').show();
    },
    showNewMessage: function() {
      this.activateTab('#msg-new-message');
      this.$('.msg-new-message').addClass('active');
      return $('#msgText').val('');
    },
    findForwardingUsers: function() {
      var res,
        _this = this;
      res = $.Deferred();
      if (!this.creators) {
        return this.purchases.fetched.done(function() {
          var creatorsId, purchase, template, _i, _len, _ref;
          creatorsId = [];
          _ref = _this.purchases.models;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            purchase = _ref[_i];
            template = purchase.get('template');
            if (!_.contains(creatorsId, template.creator.id)) {
              creatorsId.push(template.creator.id);
              _this.creators.push(template.creator);
            }
          }
          return res.resolve();
        });
      }
    },
    updateCreatorDropdown: function() {
      var creator, dropdown;
      dropdown = (function() {
        var _i, _len, _ref, _results;
        _ref = this.creators;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          creator = _ref[_i];
          _results.push("<option value='" + creator.id + "'>" + creator.email + "</option>");
        }
        return _results;
      }).call(this);
      return this.$('#forwardingUser').html(dropdown);
    },
    showMessagesReceived: function() {
      var _this = this;
      this.activateTab('#msg-inbox');
      this.$('.msg-inbox').addClass('active');
      if (!this.messagesReceived) {
        this.messagesReceived = new App.Model.MessageCollection();
        this.messagesReceived.received = true;
        this.messagesReceived.fetch();
      }
      this.messagesReceived.fetched.done(function() {
        var message, res, view;
        res = (function() {
          var _i, _len, _ref, _results;
          _ref = this.messagesReceived.models;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            message = _ref[_i];
            view = new App.View.Message({
              model: message
            });
            _results.push(view.render());
          }
          return _results;
        }).call(_this);
        _this.$('#msg-inbox').find('.gen-table tbody').html(res);
        return App.resetHeight();
      });
      return this.messagesReceived.fetched.fail(function() {
        return _this.$('.messages').html('<li><div class="feedback"><strong class="error">Sorry, we could not load your messages at this time, please try again later</strong></div></li>');
      });
    },
    showMessagesSent: function() {
      var _this = this;
      this.activateTab('#msg-sent-message');
      this.$('.msg-sent-message').addClass('active');
      if (!this.messagesSent) {
        this.messagesSent = new App.Model.MessageCollection();
        this.messagesSent.received = false;
        this.messagesSent.fetch();
      }
      this.messagesSent.fetched.done(function() {
        var message, res, view;
        res = (function() {
          var _i, _len, _ref, _results;
          _ref = this.messagesSent.models;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            message = _ref[_i];
            view = new App.View.MessageSent({
              model: message
            });
            _results.push(view.render());
          }
          return _results;
        }).call(_this);
        _this.$('#msg-sent-message').find('.gen-table tbody').html(res);
        return App.resetHeight();
      });
      return this.messagesSent.fetched.fail(function() {
        return _this.$('.messages').html('<li><div class="feedback"><strong class="error">Sorry, we could not load your messages at this time, please try again later</strong></div></li>');
      });
    },
    showMessage: function(id) {
      var msg, view;
      this.messagesReceived = null;
      msg = new App.Model.Message;
      msg.set('id', id);
      msg.set('user', App.user.id);
      view = new App.View.MessageDetails({
        model: msg
      });
      console.log(view.render());
      return $('#msg-inbox').html(view.render());
    },
    sendMessage: function(e) {
      var message, res, text, user,
        _this = this;
      e.preventDefault();
      $('#sendMessage').addClass('loading');
      text = $('#msgText').val();
      message = new App.Model.Message();
      user = $('#forwardingUser').val();
      message.set({
        user: user
      });
      message.set({
        text: text
      });
      res = message.save();
      res.always(function() {
        return $('#sendMessage').removeClass('loading');
      });
      res.done(function() {
        if (!_this.messagesSent) {
          _this.messagesSent = new App.Model.MessageCollection();
        }
        _this.messagesSent.received = false;
        _this.messagesSent.fetch();
        _this.showMessagesSent();
        return $('#msgText').val('');
      });
      return res.fail(function(data) {});
    }
  });

  App.View.Message = App.View.extend({
    tagName: 'tr',
    templateName: 'message',
    events: {
      'click .reply': 'reply',
      'click': 'open'
    },
    render: function() {
      $(this.el).html(this.template({
        model: this.model
      }));
      return this.el;
    },
    open: function(e) {
      if (e != null) {
        e.preventDefault();
      }
      return App.router.navigate('message/' + this.model.get('id'), {
        trigger: true
      });
    },
    reply: function(e) {
      if (e != null) {
        e.stopPropagation();
      }
      if (e != null) {
        e.preventDefault();
      }
      return $(document).trigger('replyTo', this.model);
    }
  });

  App.View.MessageSent = App.View.extend({
    tagName: 'tr',
    templateName: 'message-sent',
    render: function() {
      $(this.el).html(this.template({
        model: this.model
      }));
      return this.el;
    }
  });

  App.View.MessageDetails = App.View.extend({
    templateName: 'message-details',
    tagName: 'table',
    className: 'gen-table',
    events: {
      'click .reply': 'reply'
    },
    render: function() {
      var _this = this;
      $(this.el).html('<tr><td style="text-align: center"><img width="64" src="/bundles/stampliaweb/img/tpl/ajax_loader_128.gif" /></td></tr>');
      this.model.fetch().done(function() {
        $(_this.el).html(_this.template({
          model: _this.model
        }));
        _this.model.set('read', true);
        return _this.model.save().done(function() {
          return App.messages.fetch();
        });
      });
      return this.el;
    },
    reply: function(e) {
      if (e != null) {
        e.preventDefault();
      }
      console.log('reply');
      return $(document).trigger('replyTo', this.model);
    }
  });

}).call(this);
