// Generated by CoffeeScript 1.4.0
(function() {

  App.View.Downloads = App.View.extend({
    tagName: 'div',
    id: 'downloads',
    className: 'admin-module',
    templateName: 'templates',
    breadcrumbs: null,
    purchases: null,
    initialize: function() {
      this.purchases = new App.Model.PurchaseCollection;
      return this.purchases.fetch();
    },
    render: function() {
      var _this = this;
      $(this.el).html(this.template());
      App.setActive('downloads');
      this.breadcrumbs = [
        {
          label: App.user.get('name'),
          link: '#dashboard'
        }, {
          label: 'My Downloads'
        }
      ];
      App.setBreadcrumbs(this.breadcrumbs);
      this.purchases.fetched.done(function() {
        var bghttmpl, r, view;
        r = (function() {
          var _i, _len, _ref, _results;
          _ref = this.purchases.models;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            bghttmpl = _ref[_i];
            view = new App.View.Download({
              model: bghttmpl
            });
            _results.push(view.render());
          }
          return _results;
        }).call(_this);
        r;

        _this.$('.templates-list').html(r);
        return App.resetHeight();
      });
      return this.el;
    }
  });

  App.View.Download = App.View.extend({
    tagName: 'li',
    templateName: 'download',
    events: {
      'click .download': 'downloadTemplate'
    },
    render: function() {
      var tmpl;
      tmpl = new App.Model.Template(this.model.get('template'));
      $(this.el).html(this.template({
        model: tmpl
      }));
      return this.el;
    },
    zipUrl: function() {
      var hostname, protocol, url, _ref;
      url = this.model.url() + '.zip?access_token=' + App.client.token + '&_ziprenderer_filename=template_' + this.model.get('id') + ".zip";
      _ref = document.location, protocol = _ref.protocol, hostname = _ref.hostname;
      return "" + protocol + "//" + hostname + url;
    },
    downloadTemplate: function(e) {
      if (e != null) {
        e.preventDefault();
      }
      return document.location.href = this.zipUrl();
    }
  });

}).call(this);
