// Generated by CoffeeScript 1.4.0
(function() {

  App.Model = Backbone.Model.extend({
    parse: function(resp, xhr) {
      if (false === this.namespace) {
        return this.toJSON();
      } else {
        if (!this.namespace) {
          throw Error("a namespace property must be defined");
        }
        return resp[this.namespace];
      }
    }
  });

  _.extend(App.Model.prototype, App.Sync);

  App.Collection = Backbone.Paginator.requestPager.extend({
    parse: function(resp, xhr) {
      if (!this.namespace) {
        throw Error("a namespace property must be defined");
      }
      return resp[this.namespace];
    },
    add: function(models, options) {
      options = _.extend(options, {
        parse: false
      });
      return Backbone.Collection.prototype.add.call(this, models, options);
    },
    parse: function(resp) {
      this.totalPages = resp.count;
      if (!this.namespace) {
        throw Error("a namespace property must be defined");
      }
      return resp[this.namespace];
    },
    initialize: function() {
      return this.fetched = $.Deferred();
    },
    fetch: function() {
      var f,
        _this = this;
      this.fetched = $.Deferred();
      f = Backbone.Collection.prototype.fetch.apply(this, [
        {
          url: this.url()
        }
      ]);
      f.done(function() {
        return _this.fetched.resolve(_this);
      });
      return f.fail(function() {
        return _this.fetched.reject(_this);
      });
    }
  });

  _.extend(App.Collection.prototype, App.Sync);

}).call(this);
